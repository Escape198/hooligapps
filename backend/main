from fastapi import FastAPI, Depends
from fastapi.middleware.cors import CORSMiddleware
from sqlalchemy.orm import Session

from .database import Base, engine, SessionLocal
from .schemas import SubmissionRequest
from .repositories import SubmissionRepository
from .services import SubmissionService


Base.metadata.create_all(bind=engine)

app = FastAPI()


def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()


@app.post("/submit")
async def submit_form(
    payload: SubmissionRequest,
    db: Session = Depends(get_db)
):
    repo = SubmissionRepository(db)
    service = SubmissionService(repo)
    response = await service.submit(payload)
    return response


@app.get("/history")
def get_history(db: Session = Depends(get_db)):
    repo = SubmissionRepository(db)
    service = SubmissionService(repo)
    return service.get_history()
